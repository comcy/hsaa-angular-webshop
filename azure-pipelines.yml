# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  batch: true
  branches:
    include:
      - "*"

variables:
  - name: PROJECT_PATH
    value: "src/webshop-frontend/"

  - name: PROJECT_NAME
    value: "webshop-app"

  - name: SHARED_LIB
    value: "shared-lib"

  - name: PROJECT_DIST_PATH
    value: "src/webshop-frontend/dist/webshop-app/"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: "qa_stage"
    displayName: "QA Stage"
    jobs:
      - job: "prepare_job"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - script: |
              ls -al
              ls -al ${{ variables.PROJECT_PATH }}
              ls -al ${{ variables.PROJECT_PATH }}/projects
            displayName: "DEBUG"

          - task: Npm@1
            displayName: "Install"
            inputs:
              command: "custom"
              customCommand: "install"
              workingDir: ${{ variables.PROJECT_PATH }}

          - task: Npm@1
            displayName: "Test ${{ variables.PROJECT_NAME }}"
            inputs:
              command: "custom"
              customCommand: "run test ${{ variables.PROJECT_NAME }}"
              workingDir: ${{ variables.PROJECT_PATH }}

          - task: Npm@1
            displayName: "Test ${{ variables.SHARED_LIB }}"
            inputs:
              command: "custom"
              customCommand: "run test ${{ variables.SHARED_LIB }}"
              workingDir: ${{ variables.PROJECT_PATH }}

  - stage: "release_stage"
    displayName: "RELEASE Stage"
    dependsOn: ["qa_stage"]
    jobs:
      - job: "prepare_job"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - script: |
              ls -al
              ls -al ${{ variables.PROJECT_PATH }}
              ls -al ${{ variables.PROJECT_PATH }}/projects
            displayName: "DEBUG"

          - task: Npm@1
            displayName: "Install"
            inputs:
              command: "custom"
              customCommand: "install"
              workingDir: ${{ variables.PROJECT_PATH }}

          - task: Npm@1
            displayName: "Build release"
            inputs:
              command: "custom"
              customCommand: "run build ${{ variables.PROJECT_NAME }}"
              workingDir: ${{ variables.PROJECT_PATH }}
